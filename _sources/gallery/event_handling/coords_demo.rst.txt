

.. _sphx_glr_gallery_event_handling_coords_demo.py:


===========
Coords Demo
===========

An example of how to interact with the plotting canvas by connecting
to move and click events




.. image:: /gallery/event_handling/images/sphx_glr_coords_demo_001.png
    :align: center





.. code-block:: python

    from __future__ import print_function
    import sys
    import matplotlib.pyplot as plt
    import numpy as np

    t = np.arange(0.0, 1.0, 0.01)
    s = np.sin(2 * np.pi * t)
    fig, ax = plt.subplots()
    ax.plot(t, s)


    def on_move(event):
        # get the x and y pixel coords
        x, y = event.x, event.y

        if event.inaxes:
            ax = event.inaxes  # the axes instance
            print('data coords %f %f' % (event.xdata, event.ydata))


    def on_click(event):
        # get the x and y coords, flip y from top to bottom
        x, y = event.x, event.y
        if event.button == 1:
            if event.inaxes is not None:
                print('data coords %f %f' % (event.xdata, event.ydata))


    binding_id = plt.connect('motion_notify_event', on_move)
    plt.connect('button_press_event', on_click)

    if "test_disconnect" in sys.argv:
        print("disconnecting console coordinate printout...")
        plt.disconnect(binding_id)

    plt.show()

**Total running time of the script:** ( 0 minutes  0.027 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: coords_demo.py <coords_demo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: coords_demo.ipynb <coords_demo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
