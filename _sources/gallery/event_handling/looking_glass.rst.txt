

.. _sphx_glr_gallery_event_handling_looking_glass.py:


=============
Looking Glass
=============





.. image:: /gallery/event_handling/images/sphx_glr_looking_glass_001.png
    :align: center





.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt
    import matplotlib.patches as patches

    # Fixing random state for reproducibility
    np.random.seed(19680801)

    x, y = np.random.rand(2, 200)

    fig, ax = plt.subplots()
    circ = patches.Circle((0.5, 0.5), 0.25, alpha=0.8, fc='yellow')
    ax.add_patch(circ)


    ax.plot(x, y, alpha=0.2)
    line, = ax.plot(x, y, alpha=1.0, clip_path=circ)
    ax.set_title("Left click and drag to move looking glass")


    class EventHandler(object):
        def __init__(self):
            fig.canvas.mpl_connect('button_press_event', self.onpress)
            fig.canvas.mpl_connect('button_release_event', self.onrelease)
            fig.canvas.mpl_connect('motion_notify_event', self.onmove)
            self.x0, self.y0 = circ.center
            self.pressevent = None

        def onpress(self, event):
            if event.inaxes != ax:
                return

            if not circ.contains(event)[0]:
                return

            self.pressevent = event

        def onrelease(self, event):
            self.pressevent = None
            self.x0, self.y0 = circ.center

        def onmove(self, event):
            if self.pressevent is None or event.inaxes != self.pressevent.inaxes:
                return

            dx = event.xdata - self.pressevent.xdata
            dy = event.ydata - self.pressevent.ydata
            circ.center = self.x0 + dx, self.y0 + dy
            line.set_clip_path(circ)
            fig.canvas.draw()

    handler = EventHandler()
    plt.show()

**Total running time of the script:** ( 0 minutes  0.029 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: looking_glass.py <looking_glass.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: looking_glass.ipynb <looking_glass.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
