

.. _sphx_glr_gallery_api_colorbar_basics.py:


========
Colorbar
========

This example shows how to use colorbar by specifying the mappable object (here
the imshow returned object) and the axes to attach the colorbar to.




.. image:: /gallery/api/images/sphx_glr_colorbar_basics_001.png
    :align: center





.. code-block:: python


    import numpy as np
    import matplotlib.pyplot as plt

    # setup some generic data
    N = 37
    x, y = np.mgrid[:N, :N]
    Z = (np.cos(x*0.2) + np.sin(y*0.3))

    # mask out the negative and positve values, respectively
    Zpos = np.ma.masked_less(Z, 0)
    Zneg = np.ma.masked_greater(Z, 0)

    fig, (ax1, ax2) = plt.subplots(figsize=(8, 3), ncols=2)

    # plot just the positive data and save the
    # color "mappable" object returned by ax1.imshow
    pos = ax1.imshow(Zpos, cmap='Blues', interpolation='none')

    # add the colorbar using the figure's method,
    # telling which mappable we're talking about and
    # which axes object it should be near
    fig.colorbar(pos, ax=ax1)

    # repeat everything above for the negative data
    neg = ax2.imshow(Zneg, cmap='Reds_r', interpolation='none')
    fig.colorbar(neg, ax=ax2)

    plt.show()

**Total running time of the script:** ( 0 minutes  0.188 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: colorbar_basics.py <colorbar_basics.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: colorbar_basics.ipynb <colorbar_basics.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
