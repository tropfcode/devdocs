

.. _sphx_glr_gallery_pyplots_boxplot_demo.py:


============
Boxplot Demo
============

Example boxplot code



.. code-block:: python


    import numpy as np
    import matplotlib.pyplot as plt

    # Fixing random state for reproducibility
    np.random.seed(19680801)

    # fake up some data
    spread = np.random.rand(50) * 100
    center = np.ones(25) * 50
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    data = np.concatenate((spread, center, flier_high, flier_low), 0)








.. code-block:: python


    fig1, ax1 = plt.subplots()
    ax1.set_title('Basic Plot')
    ax1.boxplot(data)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_001.png
    :align: center





.. code-block:: python


    fig2, ax2 = plt.subplots()
    ax2.set_title('Notched boxes')
    ax2.boxplot(data, notch=True)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_002.png
    :align: center





.. code-block:: python


    green_diamond = dict(markerfacecolor='g', marker='D')
    fig3, ax3 = plt.subplots()
    ax3.set_title('Changed Outlier Symbols')
    ax3.boxplot(data, flierprops=green_diamond)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_003.png
    :align: center





.. code-block:: python


    fig4, ax4 = plt.subplots()
    ax4.set_title('Hide Outlier Points')
    ax4.boxplot(data, showfliers=False)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_004.png
    :align: center





.. code-block:: python


    red_square = dict(markerfacecolor='r', marker='s')
    fig5, ax5 = plt.subplots()
    ax5.set_title('Horizontal Boxes')
    ax5.boxplot(data, vert=False, flierprops=red_square)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_005.png
    :align: center





.. code-block:: python


    fig6, ax6 = plt.subplots()
    ax6.set_title('Shorter Whisker Length')
    ax6.boxplot(data, flierprops=red_square, vert=False, whis=0.75)




.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_006.png
    :align: center




Fake up some more data



.. code-block:: python


    spread = np.random.rand(50) * 100
    center = np.ones(25) * 40
    flier_high = np.random.rand(10) * 100 + 100
    flier_low = np.random.rand(10) * -100
    d2 = np.concatenate((spread, center, flier_high, flier_low), 0)
    data.shape = (-1, 1)
    d2.shape = (-1, 1)







Making a 2-D array only works if all the columns are the
same length.  If they are not, then use a list instead.
This is actually more efficient because boxplot converts
a 2-D array into a list of vectors internally anyway.



.. code-block:: python


    data = [data, d2, d2[::2,0]]
    fig7, ax7 = plt.subplots()
    ax7.set_title('Multiple Samples with Different sizes')
    ax7.boxplot(data)

    plt.show()



.. image:: /gallery/pyplots/images/sphx_glr_boxplot_demo_007.png
    :align: center




**Total running time of the script:** ( 0 minutes  0.262 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: boxplot_demo.py <boxplot_demo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: boxplot_demo.ipynb <boxplot_demo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
