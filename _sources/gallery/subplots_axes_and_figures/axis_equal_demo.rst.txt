

.. _sphx_glr_gallery_subplots_axes_and_figures_axis_equal_demo.py:


===============
Axis Equal Demo
===============

How to set and adjust plots with equal axis ratios.




.. image:: /gallery/subplots_axes_and_figures/images/sphx_glr_axis_equal_demo_001.png
    :align: center





.. code-block:: python


    import matplotlib.pyplot as plt
    import numpy as np

    # Plot circle of radius 3.

    an = np.linspace(0, 2 * np.pi, 100)
    fig, axs = plt.subplots(2, 2)

    axs[0, 0].plot(3 * np.cos(an), 3 * np.sin(an))
    axs[0, 0].set_title('not equal, looks like ellipse', fontsize=10)

    axs[0, 1].plot(3 * np.cos(an), 3 * np.sin(an))
    axs[0, 1].axis('equal')
    axs[0, 1].set_title('equal, looks like circle', fontsize=10)

    axs[1, 0].plot(3 * np.cos(an), 3 * np.sin(an))
    axs[1, 0].axis('equal')
    axs[1, 0].axis([-3, 3, -3, 3])
    axs[1, 0].set_title('still a circle, even after changing limits', fontsize=10)

    axs[1, 1].plot(3 * np.cos(an), 3 * np.sin(an))
    axs[1, 1].set_aspect('equal', 'box')
    axs[1, 1].set_title('still a circle, auto-adjusted data limits', fontsize=10)

    fig.tight_layout()

    plt.show()

**Total running time of the script:** ( 0 minutes  0.161 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: axis_equal_demo.py <axis_equal_demo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: axis_equal_demo.ipynb <axis_equal_demo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
