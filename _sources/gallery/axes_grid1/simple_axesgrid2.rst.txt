

.. _sphx_glr_gallery_axes_grid1_simple_axesgrid2.py:


================
Simple Axesgrid2
================





.. image:: /gallery/axes_grid1/images/sphx_glr_simple_axesgrid2_001.png
    :align: center





.. code-block:: python

    import matplotlib.pyplot as plt
    from mpl_toolkits.axes_grid1 import ImageGrid


    def get_demo_image():
        import numpy as np
        from matplotlib.cbook import get_sample_data
        f = get_sample_data("axes_grid/bivariate_normal.npy", asfileobj=False)
        z = np.load(f)
        # z is a numpy array of 15x15
        return z, (-3, 4, -4, 3)

    F = plt.figure(1, (5.5, 3.5))
    grid = ImageGrid(F, 111,  # similar to subplot(111)
                     nrows_ncols=(1, 3),
                     axes_pad=0.1,
                     add_all=True,
                     label_mode="L",
                     )

    Z, extent = get_demo_image()  # demo image

    im1 = Z
    im2 = Z[:, :10]
    im3 = Z[:, 10:]
    vmin, vmax = Z.min(), Z.max()
    for i, im in enumerate([im1, im2, im3]):
        ax = grid[i]
        ax.imshow(im, origin="lower", vmin=vmin,
                  vmax=vmax, interpolation="nearest")

    plt.draw()
    plt.show()

**Total running time of the script:** ( 0 minutes  0.209 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: simple_axesgrid2.py <simple_axesgrid2.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: simple_axesgrid2.ipynb <simple_axesgrid2.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
