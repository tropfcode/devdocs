

.. _sphx_glr_gallery_axes_grid1_simple_axes_divider2.py:


=====================
Simple Axes Divider 2
=====================





.. image:: /gallery/axes_grid1/images/sphx_glr_simple_axes_divider2_001.png
    :align: center





.. code-block:: python

    import mpl_toolkits.axes_grid1.axes_size as Size
    from mpl_toolkits.axes_grid1 import Divider
    import matplotlib.pyplot as plt

    fig1 = plt.figure(1, (5.5, 4.))

    # the rect parameter will be ignore as we will set axes_locator
    rect = (0.1, 0.1, 0.8, 0.8)
    ax = [fig1.add_axes(rect, label="%d" % i) for i in range(4)]

    horiz = [Size.Scaled(1.5), Size.Fixed(.5), Size.Scaled(1.),
             Size.Scaled(.5)]

    vert = [Size.Scaled(1.), Size.Fixed(.5), Size.Scaled(1.5)]

    # divide the axes rectangle into grid whose size is specified by horiz * vert
    divider = Divider(fig1, rect, horiz, vert, aspect=False)

    ax[0].set_axes_locator(divider.new_locator(nx=0, ny=0))
    ax[1].set_axes_locator(divider.new_locator(nx=0, ny=2))
    ax[2].set_axes_locator(divider.new_locator(nx=2, ny=2))
    ax[3].set_axes_locator(divider.new_locator(nx=2, nx1=4, ny=0))

    for ax1 in ax:
        plt.setp(ax1.get_xticklabels()+ax1.get_yticklabels(),
                 visible=False)

    plt.show()

**Total running time of the script:** ( 0 minutes  0.136 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: simple_axes_divider2.py <simple_axes_divider2.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: simple_axes_divider2.ipynb <simple_axes_divider2.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
