

.. _sphx_glr_gallery_units_annotate_with_units.py:


=====================
Annotation with units
=====================

The example illustrates how to create text and arrow
annotations using a centimeter-scale plot.

.. only:: builder_html

   This example requires :download:`basic_units.py <basic_units.py>`




.. image:: /gallery/units/images/sphx_glr_annotate_with_units_001.png
    :align: center





.. code-block:: python


    import matplotlib.pyplot as plt
    from basic_units import cm

    fig, ax = plt.subplots()

    ax.annotate("Note 01", [0.5*cm, 0.5*cm])

    # xy and text both unitized
    ax.annotate('local max', xy=(3*cm, 1*cm), xycoords='data',
                xytext=(0.8*cm, 0.95*cm), textcoords='data',
                arrowprops=dict(facecolor='black', shrink=0.05),
                horizontalalignment='right', verticalalignment='top')

    # mixing units w/ nonunits
    ax.annotate('local max', xy=(3*cm, 1*cm), xycoords='data',
                xytext=(0.8, 0.95), textcoords='axes fraction',
                arrowprops=dict(facecolor='black', shrink=0.05),
                horizontalalignment='right', verticalalignment='top')


    ax.set_xlim(0*cm, 4*cm)
    ax.set_ylim(0*cm, 4*cm)
    plt.show()

**Total running time of the script:** ( 0 minutes  0.031 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: annotate_with_units.py <annotate_with_units.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: annotate_with_units.ipynb <annotate_with_units.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
