

.. _sphx_glr_gallery_mplot3d_mixed_subplots.py:


=================================
2D and 3D *Axes* in same *Figure*
=================================

This example shows a how to plot a 2D and 3D plot on the same figure.



.. code-block:: python

    from mpl_toolkits.mplot3d import Axes3D
    import matplotlib.pyplot as plt
    import numpy as np


    def f(t):
        s1 = np.cos(2*np.pi*t)
        e1 = np.exp(-t)
        return np.multiply(s1, e1)








Set up a figure twice as tall as it is wide
############################################



.. code-block:: python

    fig = plt.figure(figsize=plt.figaspect(2.))
    fig.suptitle('A tale of 2 subplots')





.. image:: /gallery/mplot3d/images/sphx_glr_mixed_subplots_001.png
    :align: center




First subplot
############################################



.. code-block:: python

    ax = fig.add_subplot(2, 1, 1)

    t1 = np.arange(0.0, 5.0, 0.1)
    t2 = np.arange(0.0, 5.0, 0.02)
    t3 = np.arange(0.0, 2.0, 0.01)

    ax.plot(t1, f(t1), 'bo',
            t2, f(t2), 'k--', markerfacecolor='green')
    ax.grid(True)
    ax.set_ylabel('Damped oscillation')








Second subplot
############################################



.. code-block:: python

    ax = fig.add_subplot(2, 1, 2, projection='3d')

    X = np.arange(-5, 5, 0.25)
    Y = np.arange(-5, 5, 0.25)
    X, Y = np.meshgrid(X, Y)
    R = np.sqrt(X**2 + Y**2)
    Z = np.sin(R)

    surf = ax.plot_surface(X, Y, Z, rstride=1, cstride=1,
                           linewidth=0, antialiased=False)
    ax.set_zlim(-1, 1)


    plt.show()






**Total running time of the script:** ( 0 minutes  0.116 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: mixed_subplots.py <mixed_subplots.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: mixed_subplots.ipynb <mixed_subplots.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
