

.. _sphx_glr_gallery_mplot3d_quiver3d.py:


==============
3D quiver plot
==============

Demonstrates plotting directional arrows at points on a 3d meshgrid.




.. image:: /gallery/mplot3d/images/sphx_glr_quiver3d_001.png
    :align: center





.. code-block:: python


    from mpl_toolkits.mplot3d import axes3d
    import matplotlib.pyplot as plt
    import numpy as np

    fig = plt.figure()
    ax = fig.gca(projection='3d')

    # Make the grid
    x, y, z = np.meshgrid(np.arange(-0.8, 1, 0.2),
                          np.arange(-0.8, 1, 0.2),
                          np.arange(-0.8, 1, 0.8))

    # Make the direction data for the arrows
    u = np.sin(np.pi * x) * np.cos(np.pi * y) * np.cos(np.pi * z)
    v = -np.cos(np.pi * x) * np.sin(np.pi * y) * np.cos(np.pi * z)
    w = (np.sqrt(2.0 / 3.0) * np.cos(np.pi * x) * np.cos(np.pi * y) *
         np.sin(np.pi * z))

    ax.quiver(x, y, z, u, v, w, length=0.1, normalize=True)

    plt.show()

**Total running time of the script:** ( 0 minutes  0.025 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: quiver3d.py <quiver3d.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: quiver3d.ipynb <quiver3d.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
